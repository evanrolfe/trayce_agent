name: Build and Test
on: [push]

permissions:
  contents: write

jobs:
  build-linux-amd64:
    name: Build Linux (amd64)
    runs-on: ubuntu-latest
    env:
      ARCH: amd64
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Start dependencies
        run: docker compose up --build -d trayce_agent megaserver

      - name: Test
        run: docker compose up test --build --exit-code-from test

      - name: Print trayce_agent logs
        if: always()
        run: docker compose logs trayce_agent

      - name: Build
        run: docker build -t traycer/trayce_agent_tmp:${ARCH} .

      - name: Push
        run: docker push traycer/trayce_agent_tmp:${ARCH}

  build-linux-arm64:
    name: Build Linux (arm64)
    runs-on: ubuntu-24.04-arm
    env:
      ARCH: arm64
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Start dependencies
        run: docker compose up --build -d trayce_agent megaserver

      - name: Test
        run: docker compose up test --build --exit-code-from test

      - name: Print trayce_agent logs
        if: always()
        run: docker compose logs trayce_agent

      - name: Build
        run: docker build -t traycer/trayce_agent_tmp:${ARCH} .

      - name: Push
        if: github.ref == 'refs/heads/main'
        run: docker push traycer/trayce_agent_tmp:${ARCH}

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'release:')
    needs: [build-linux-amd64, build-linux-arm64]
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          export VERSION=$(cat ./VERSION)
          docker manifest create traycer/trayce_agent:${VERSION} traycer/trayce_agent_tmp:amd64 traycer/trayce_agent_tmp:arm64
          docker manifest create traycer/trayce_agent:latest traycer/trayce_agent_tmp:amd64 traycer/trayce_agent_tmp:arm64
          docker manifest push traycer/trayce_agent:${VERSION}
          docker manifest push traycer/trayce_agent:latest
